# Generated by Django 4.1.4 on 2022-12-10 21:41

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CoordinateSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='UNIQUE CODE')),
                ('srid', models.IntegerField(unique=True, verbose_name='SPATIAL REFERENCE ID / EPSG CODE')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='NAME')),
                ('unitname', models.CharField(max_length=250, verbose_name='UNIT NAME')),
                ('unitsymbol', models.CharField(max_length=250, verbose_name='UNIT SYMBOL')),
                ('notes', models.TextField(blank=True, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, null=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
            ],
            options={
                'verbose_name': 'COORDINATE SYSTEM',
                'verbose_name_plural': 'COORDINATE SYSTEMS',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='UNIQUE CODE')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='NAME')),
                ('countryboundaryDEFAULT', models.TextField(blank=True, null=True, verbose_name='BOUNDARY POLYGON DATA(<<{WKT}FORMAT>>)')),
                ('countryboundaryWGS84', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='BOUNDARY MAP VIEW')),
                ('area', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='AREA')),
                ('perimeter', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='PERIMETER')),
                ('center', models.CharField(blank=True, max_length=1000, null=True, verbose_name='CENTER')),
                ('notes', models.TextField(blank=True, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, null=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
                ('countryboundaryCRS', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinatesystem_countries', to='parcels.coordinatesystem', verbose_name='BOUNDARY COORDINATE SYSTEM')),
            ],
            options={
                'verbose_name': 'COUNTRY',
                'verbose_name_plural': 'COUNTRIES',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('districtboundaryDEFAULT', models.TextField(blank=True, null=True, verbose_name='BOUNDARY POLYGON DATA(<<{WKT}FORMAT>>)')),
                ('districtboundaryWGS84', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='BOUNDARY MAP VIEW')),
                ('area', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='AREA')),
                ('perimeter', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='PERIMETER')),
                ('center', models.CharField(blank=True, max_length=1000, null=True, verbose_name='CENTER')),
                ('notes', models.TextField(blank=True, max_length=1000000, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
                ('districtboundaryCRS', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinatesystem_districts', to='parcels.coordinatesystem', verbose_name='BOUNDARY COORDINATE SYSTEM')),
            ],
            options={
                'verbose_name': 'DISTRICT',
                'verbose_name_plural': 'DISTRICTS',
            },
        ),
        migrations.CreateModel(
            name='ParcelOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='UNIQUE CODE')),
                ('firstname', models.CharField(blank=True, max_length=50, verbose_name='FIRST NAME')),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='SURNAME')),
                ('othernames', models.CharField(blank=True, max_length=150, verbose_name='OTHER NAMES')),
                ('country', models.CharField(blank=True, max_length=150, verbose_name='NATIONALITY')),
                ('region', models.CharField(blank=True, max_length=150, verbose_name='REGION')),
                ('district', models.CharField(blank=True, max_length=150, verbose_name='DISTRICT')),
                ('town', models.CharField(blank=True, max_length=150, verbose_name='TOWN')),
                ('addressline1', models.CharField(blank=True, max_length=100, null=True, verbose_name='ADDRESS LINE 1')),
                ('addressline2', models.CharField(blank=True, max_length=100, null=True, verbose_name='ADDRESS LINE 2')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='EMAIL')),
                ('telephone1', models.CharField(blank=True, max_length=15, null=True, verbose_name='TELEPHONE LINE 1')),
                ('telephone2', models.CharField(blank=True, max_length=15, null=True, verbose_name='TELEPHONE LINE 2')),
                ('notes', models.TextField(blank=True, max_length=1000000, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
            ],
            options={
                'verbose_name': 'PARCEL OWNER',
                'verbose_name_plural': 'PARCEL OWNERS',
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('townboundaryDEFAULT', models.TextField(blank=True, null=True, verbose_name='BOUNDARY POLYGON DATA(<<{WKT}FORMAT>>)')),
                ('townboundaryWGS84', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='BOUNDARY MAP VIEW')),
                ('area', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='AREA')),
                ('perimeter', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='PERIMETER')),
                ('center', models.CharField(blank=True, max_length=1000, null=True, verbose_name='CENTER')),
                ('notes', models.TextField(blank=True, max_length=1000000, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district_towns', to='parcels.district')),
                ('townboundaryCRS', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinatesystem_towns', to='parcels.coordinatesystem', verbose_name='BOUNDARY COORDINATE SYSTEM')),
            ],
            options={
                'verbose_name': 'TOWN',
                'verbose_name_plural': 'TOWNS',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='UNIQUE CODE')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='NAME')),
                ('regionboundaryDEFAULT', models.TextField(blank=True, null=True, verbose_name='BOUNDARY POLYGON DATA(<<{WKT}FORMAT>>)')),
                ('regionboundaryWGS84', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='BOUNDARY MAP VIEW')),
                ('area', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='AREA')),
                ('perimeter', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='PERIMETER')),
                ('center', models.CharField(blank=True, max_length=1000, null=True, verbose_name='CENTER')),
                ('notes', models.TextField(blank=True, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, null=True, upload_to='documents', verbose_name='FILES')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED ON')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_regions', to='parcels.country', verbose_name='COUNTRY')),
                ('regionboundaryCRS', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinatesystem_regions', to='parcels.coordinatesystem', verbose_name='BOUNDARY COORDINATE SYSTEM')),
            ],
            options={
                'verbose_name': 'REGION',
                'verbose_name_plural': 'REGIONS',
            },
        ),
        migrations.CreateModel(
            name='Parcel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('parcelboundaryDEFAULT', models.TextField(verbose_name='BOUNDARY POLYGON DATA(<<{WKT}FORMAT>>)')),
                ('parcelreferenceDEFAULT', models.TextField(blank=True, null=True, verbose_name='REFERENCES MULTIPOINT DATA(<<{WKT}FORMAT>>)')),
                ('parcelboundaryWGS84', django.contrib.gis.db.models.fields.PolygonField(blank=True, editable=False, null=True, srid=4326, verbose_name='PARCEL POLYGON WGS84')),
                ('parcelreferenceWGS84', django.contrib.gis.db.models.fields.MultiPointField(blank=True, editable=False, null=True, srid=4326, verbose_name='PARCEL REFERENCE POINT WGS84')),
                ('parcelgeometry', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326, verbose_name='PARCEL GEOMETRY MAP VIEW')),
                ('area', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='AREA')),
                ('perimeter', models.DecimalField(blank=True, decimal_places=9, max_digits=50, null=True, verbose_name='PERIMETER')),
                ('center', models.CharField(blank=True, max_length=1000, null=True, verbose_name='CENTER')),
                ('notes', models.TextField(blank=True, max_length=1000000, verbose_name='NOTES')),
                ('files', models.FileField(blank=True, upload_to='documents', verbose_name='FILES')),
                ('registered', models.DateTimeField(blank=True, null=True, verbose_name='DATETIME REGISTERED')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='DATETIME CREATED')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='DATETIME UPDATED')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_parcels', to='parcels.parcelowner')),
                ('parcelCRS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordinatesystem_parcels', to='parcels.coordinatesystem')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='town_parcels', to='parcels.town')),
            ],
            options={
                'verbose_name': 'PARCEL',
                'verbose_name_plural': 'PARCELS',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_districts', to='parcels.region'),
        ),
    ]
